# Use the official lightweight Python image.
# https://hub.docker.com/_/python
FROM python:3.10-slim-buster

# Copy local code to the container image.
ENV APP_HOME app
WORKDIR $APP_HOME

# set environment variables
#   prevents python writing .pyc files
ENV PYTHONDONTWRITEBYTECODE 1
#   prevents python buffering stdout and stderr
ENV PYTHONUNBUFFERED 1

# Install Python dependencies and Gunicorn
ADD requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir gunicorn

# Install tkinter to satisfy ploty dependency
RUN apt-get -qq -y update && \
    DEBIAN_FRONTEND=noninteractive apt-get -qq -y install \
        tk-dev


# Copy the rest of the codebase into the image
COPY . ./
EXPOSE 8000

# Run the web service on container startup. Here we use the gunicorn
# webserver, with one worker process and 8 threads.
# For environments with multiple CPU cores, increase the number of workers
# to be equal to the cores available in Cloud Run.
CMD exec gunicorn --bind 0.0.0.0:8000 --log-level info --workers 1 --threads 8 --timeout 0 app:server